% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_missing_column.R
\name{add_missing_column}
\alias{add_missing_column}
\title{Add missing columns to a data frame}
\usage{
add_missing_column(
  .data,
  ...,
  .before = NULL,
  .after = NULL,
  .name_repair = c("check_unique", "unique", "universal", "minimal")
)
}
\arguments{
\item{.data}{Data frame to append to.}

\item{...}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}>
Name-value pairs, passed on to \code{\link[tibble:tibble]{tibble()}}. All values must have
the same size of \code{.data} or size 1.}

\item{.before}{One-based column index or column name where to add the
new columns, default: after last column.}

\item{.after}{One-based column index or column name where to add the
new columns, default: after last column.}

\item{.name_repair}{Treatment of problematic column names:
\itemize{
\item \code{"minimal"}: No name repair or checks, beyond basic existence,
\item \code{"unique"}: Make sure names are unique and not empty,
\item \code{"check_unique"}: (default value), no name repair, but check they are
\code{unique},
\item \code{"universal"}: Make the names \code{unique} and syntactic
\item a function: apply custom name repair (e.g., \code{.name_repair = make.names}
for names in the style of base R).
\item A purrr-style anonymous function, see \code{\link[rlang:as_function]{rlang::as_function()}}
}

This argument is passed on as \code{repair} to \code{\link[vctrs:vec_as_names]{vctrs::vec_as_names()}}.
See there for more details on these terms and the strategies used
to enforce them.}
}
\description{
\code{add_missing_column()} adds one or more columns to an existing data frame only if they
do not already exist.\cr
\cr
This is a simple wrapper around \code{\link[tibble]{add_column}()}.
}
\examples{
# add new columns x and y
add_missing_column(mtcars, x = 1, y = NA)

# add new columns from a named vector
new_cols <- c(x = 1, y = NA)
add_missing_column(mtcars, !!!new_cols)

}
\seealso{
\code{\link[tibble]{add_column}()}
}
