% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/change_case_from_spec.R
\name{change_case_from_spec}
\alias{change_case_from_spec}
\alias{data_model_to_snake}
\alias{snake_to_data_model}
\title{Convert table name and field case}
\usage{
change_case_from_spec(
  table_list,
  table_spec,
  from_case = NULL,
  to_case = NULL,
  add_missing = FALSE
)

data_model_to_snake(table_list, table_spec)

snake_to_data_model(table_list, table_spec)
}
\arguments{
\item{table_list}{A list of tables to rename.}

\item{table_spec}{Data model specification object.}

\item{from_case}{String name of the case the object originates from. If \code{NULL},
defaults to the base case.}

\item{to_case}{String name of the case to convert to. If \code{NULL},
defaults to the base case.}

\item{add_missing}{Logical whether to add in missing tables and columns.}
}
\description{
\code{change_case_from_spec()} renames from one case to another from the file spec.

\code{data_model_to_snake()} is a convenience wrapper around \code{\link{change_case_from_spec}()}
to convert from data model notation to snake_case. This function will also add any missing columns
from the spec to the model.

\code{snake_to_data_model()} is a convenience wrapper around \code{\link{change_case_from_spec}()}
to convert from snake_case to data model notation.
}
\details{
This function relies on names from a spec file. In order for this to work
consistently, a few things are assumed.\cr
\cr
The base case (or original/native case) tables are specified by the column named
'table' in both the 'tables' and 'fields' data frames of the spec. The fields
for the base case are specified by the column named 'field' in the 'fields data
frame of the spec.\cr
\cr
Any other valid case (e.g., 'new_case') specifies the table name in the 'tables' data
frame with the suffix "_table" (e.g., 'new_case_table'). The field names are specified in
the 'fields' table with the suffix "_name" (e.g., 'new_case_name').\cr
\cr
To access this specific case for conversion, simply use 'new_case' as the argument value for
either \code{from_case} or \code{to_case}.
}
